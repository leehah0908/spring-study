<!-- 이 파일이 mybatis의 mapper로 사용된다는 일종의 선언 (외우지 마세요) -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace에는 이 파일과 연동될 인터페이스의 전체 경로(패키지명 포함 클래스명)를 적는다. -->
<mapper namespace="com.study.springstudy.springmvc.chap04.mapper.ScoreMapper">

    <sql id="findAllSort">
        <if test="sort == 'num'">
            order by stu_num
        </if>

        <if test="sort == 'name'">
            order by stu_name
        </if>

        <if test="sort == 'avg'">
            order by average desc
        </if>
    </sql>

    <!-- 구현하고자 하는 인터페이스에 명세된 추상 메서드별로 SQL을 작성 -->
    <!-- id에는 추상메서드 이름을 적음. -->
    <!-- SQL 작성할 때 값을 전달하는 방법은
         1. 추상메서드를 보고 어떤 타입의 값이 전달되는지 확인.
         2. 값이 만약 객체라면, 객체 내부의 필드값을 꺼내기 위해 필드명을 지목. (get 안붙여요)
         3. 단일 값(기본 타입)이라면 매개변수명으로 지목 -->
    <insert id="save">
        insert into score
        (stu_name, kor, eng, math, total, average, grade)
        values(#{stuName}, #{kor}, #{eng}, #{math}, #{total}, #{average}, #{grade})
    </insert>

    <!-- 단일값이면 그냥 변수명 사용 -->
    <delete id="delete">
        delete from score where stu_num = #{stuNum}
    </delete>

    <update id="update">
        update score
        set kor = #{kor}, eng = #{eng}, math = #{math}, total = #{total}, average = #{average}, grade = #{grade}
        where stu_num = #{stuNum}
    </update>

    <!-- SELECT의 경우에는 반환되는 타입을 작성해 주어야 합니다.
        resultType을 통해 리턴되는 객체의 타입을 얘기해줍니다.
        데이터베이스의 컬럼명과 엔터티의 필드명이 동일해야 합니다. (스네이크케이스 -> 카멜케이스 변환은 따로 설정을 통해 처리)
        ex) board_no : boardNo (o)  board_num : bnum (x) -->

    <select id="findAll" resultType="score">
        select * from score
        <include refid="findAllSort"/>
    </select>

    <select id="findOne" resultType="score">
        select * from score where stu_num = #{stuNum}
    </select>

</mapper>